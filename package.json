{
  "name": "rollup-plugin-conditional-exec",
  "version": "2.2.1",
  "author": "Alex Miller <codex.nz@gmail.com>",
  "description": "Execute a given command after a bundle has been written",
  "type": "module",
  "homepage": "https://github.com/Codex-/rollup-plugin-conditional-exec#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Codex-/rollup-plugin-conditional-exec.git"
  },
  "bugs": {
    "url": "https://github.com/Codex-/rollup-plugin-conditional-exec/issues"
  },
  "license": "MIT",
  "keywords": [
    "rollup",
    "plugin",
    "conditional-exec",
    "exec"
  ],
  "main": "dist/cjs/index.js",
  "module": "dist/esm/index.js",
  "types": "dist/types/index.d.ts",
  "exports": {
    ".": {
      "import": {
        "default": "./dist/esm/index.js",
        "types": "./dist/types/index.d.ts"
      },
      "require": {
        "default": "./dist/cjs/index.js",
        "types": "./dist/types/index.d.ts"
      }
    }
  },
  "scripts": {
    "build": "npm run build:types && npm run build:bundles",
    "build:bundles": "node ./esbuild.config.mjs",
    "build:types": "tsc -p tsconfig.build.json",
    "check:types": "tsc -p tsconfig.json",
    "format:check": "prettier --check \"{**/*,*}.{js,ts}\"",
    "format:write": "npm run format:check -- --write",
    "lint": "eslint --ext \".js,.ts\" .",
    "release": "release-it",
    "test": "vitest run --coverage"
  },
  "files": [
    "dist/**/*"
  ],
  "peerDependencies": {
    "rollup": "^3.0.0"
  },
  "devDependencies": {
    "@types/node": "^18.7.18",
    "@typescript-eslint/eslint-plugin": "^5.37.0",
    "@typescript-eslint/parser": "^5.37.0",
    "@vitest/coverage-istanbul": "^0.24.4",
    "chalk": "^5.0.1",
    "esbuild": "^0.16.0",
    "eslint": "^8.23.1",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-prettier": "^4.2.1",
    "prettier": "^2.7.1",
    "release-it": "^15.4.2",
    "typescript": "^4.8.3",
    "vitest": "^0.25.7"
  }
}
